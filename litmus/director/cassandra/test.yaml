---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /ansible-utils/create_testname.yml

          ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'SOT'
        
          ## Fetch cassandra pod name
        - name : Fetch app 
          shell: kubectl get pods -n {{ namespace }} | grep cassandra | awk '{print $1}'
          register: app_pod

        - name : Fetch app state
          shell: kubectl get pods {{ app_pod.stdout }} -n {{ namespace }}  | awk '{print $3}' | awk -F':' '{print $1}' | tail -n 1
          register: app_status
          until: app_status.stdout == 'Running'
          retries: 30
          delay: 10
   
        - name: Check for Cassandra node up and normal status
          shell: kubectl exec -it {{ app_pod.stdout }} -n {{ namespace }} nodetool status | awk '/^(U|D)(N|L|J|M)/{print $1}' 
          register: status
          failed_when: "'UN' not in status.stdout"

        - name: Fetching Cassandra nodes count and node UN status count
          shell: kubectl exec -it {{ app_pod.stdout }} -n {{ namespace }} nodetool status | awk '/^(U|D)(N|L|J|M)/{print $1}' {{ item }}
          loop: 
            - " | wc -l"
            - " | grep UN | wc -l"
          register: up_count
          
        - name: Cassandra node status
          debug:
            msg: "cassandra up and normal nodes:{{ up_count.results[0].stdout }}/{{ up_count.results[0].stdout }}"

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
