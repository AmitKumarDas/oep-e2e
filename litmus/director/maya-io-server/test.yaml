---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /ansible-utils/create_testname.yml

          ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'SOT'
        
          ## Checking maya-io server pod's state
        - name : Fetch app state
          shell: kubectl get pods -n {{ namespace }} | grep maya-io | awk '{print $3}' | awk -F':' '{print $1}'
          register: app_status
          until: app_status.stdout != 'Init' and app_status.stdout != 'ContainerCreating' and app_status.stdout != 'PodInitializing'
          retries: 15
          delay: 10
          
        - name : Check if app is Running
          shell: kubectl get pods -n {{ namespace }} | grep maya-io | awk '{print $3}' | awk -F':' '{print $1}'
          register: app_status
          failed_when: "'Running' not in app_status.stdout"
        
        - name : Fetch director url 
          shell: kubectl get node -o wide | awk {'print $7'} | head -n 2 | tail -n 1
          register: node_ip

        - set_fact:
            url : "http://{{ node_ip.stdout }}:30380"

        - name : Check connection
          shell: curl {{ url }}/ping
          register: curl_status
          failed_when: "'pong' not in curl_status.stdout"

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
