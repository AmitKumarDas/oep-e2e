---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /ansible-utils/create_testname.yml

          ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'SOT'
        
          ## Fetch maya-ui pod name
        - name : Fetch app pod name
          shell: kubectl get pods -n {{ namespace }} | grep maya-ui | awk '{print $1}'
          register: app_pod
          failed_when: app_pod.stdout == ""

          ## Checking maya-ui pod state
        - name : Fetch app state
          shell: kubectl get pods {{ app_pod.stdout }} -n {{ namespace }}  | awk '{print $3}' | awk -F':' '{print $1}' | tail -n 1
          register: app_status
          until: app_status.stdout == 'Running'
          retries: 30
          delay: 10

        - name : Fetch director url 
          shell: kubectl get node -o wide | awk {'print $7'} | head -n 4 | tail -n 1
          register: node_ip

        - set_fact:
            director_url : "http://{{ node_ip.stdout }}:30380"

        - name : Signup
          uri:
            url: "{{ director_url }}/v3/localAuthConfig"
            method: POST
            body_format: json
            body:
              {"firstName": "{{ firstname }}", "lastName": "{{ surname }}", "password": {"publicValue": "{{ username }}", "secretValue": "{{ password }}" }} 
          register: result
          retries: 10
          delay: 5
          until: ('status' in result) and (result.status == 201) 

        - name : Login
          uri:
            url: "{{ director_url }}/v3/token"
            method: POST
            body_format: json
            body:
              {"code": "{{ username }}:{{ password }}", "authProvider": "localAuthConfig"}
            status_code: 201
          register: login

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /ansible-utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
