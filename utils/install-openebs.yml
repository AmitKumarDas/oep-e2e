## Upgrade openebs control plane
- name: Upgrade openebs control plane
  shell: kubectl apply -f https://openebs.github.io/charts/openebs-operator-1.6.0.yaml

## Checking the openebs Installation    
- name: Fetch OpenEBS control plane pods state
  shell: kubectl get pods -n {{ namespace }}  | grep {{ item }} | awk '{print $3}' | awk -F':' '{print $1}' | tail -n 1
  register: app_status
  until: app_status.stdout == 'Running'
  with_items:
    - "{{ openebs_components }}"
  retries: 30
  delay: 10

## Get the container Status of the openebs pods
- name: Get the container status of the openebs pods.
  shell: >
    kubectl get pod -n {{ namespace }} --no-headers
    -o jsonpath='{.items[*].status.containerStatuses[*].ready}' | tr ' ' '\n' | uniq
  args:
    executable: /bin/bash
  register: containerStatus
  until: "containerStatus.stdout == 'true'"
  retries: 30
  delay: 10

## Creating ns app-mongo-ns
- name: Creating ns app-mongo-ns
  shell: kubectl craete ns app-mongo-ns

## Deploying application mongo
- name: Deploying application mongo
  shell: kubectl apply -f mongodb-app.yml

## Creating PVC
- name: Creating PVC
  shell: kubectl apply -f pvc.yml

## Confirm that the application is running
- name: Confirming that the application is running
  shell: >
    kubectl get pod -l app=mongo
    --no-headers -o custom-columns=:status.phase
    -n {{ app_ns }} | sort | uniq
  args:
    executable: /bin/bash
  register: result
  until: "result.stdout == 'Running'"
  delay: 40
  retries: 10